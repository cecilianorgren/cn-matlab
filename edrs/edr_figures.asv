%% 2D distribution and pressure contributions, MN, X times, with locations shown
ic = 1;
%t1 =  irf_time('2017-07-11T22:34:01.30Z','utc>EpochTT');
%t2 =  irf_time('2017-07-11T22:34:03.30Z','utc>EpochTT');
times = irf_time(['2018-08-27T11:41:24.00Z';'2018-08-27T11:41:28.00Z'],'utc>EpochTT')+0;
%times = irf_time(['2017-07-11T22:34:01.00Z';'2017-07-11T22:34:03.30Z'],'utc>EpochTT')+0.03;
%times = irf_time(['2017-07-11T22:34:01.00Z';'2017-07-11T22:34:03.30Z'],'utc>EpochTT')+0.4;
times = times(1):0.5:times(2);

if 0
times = EpochTT(['2017-07-11T22:34:01.300000000Z';
  '2017-07-11T22:34:01.800000000Z';...
  '2017-07-11T22:34:02.300000000Z';...
  '2017-07-11T22:34:02.800000000Z';...
  '2017-07-11T22:34:03.300000000Z']);
%times = times([2 3 4])+0.25;
times = times + 0.25;
end
L = [1 0 0];
M = [0 1 0];
N = [0 0 1];

vint = [-Inf Inf];
vint = [-20000 20000];
vg = -60000:2000:60000;
elim = [100 Inf];
%h = setup_subplots(2,times.length,'vertical'); 
nt = times.length;
h1_pos = subplot(3,nt,1:nt); position = h1_pos.Position;
h1 = irf_plot(1); 
h1.Position = position; 
%delete(h1_pos);
for ip = 1:(nt*2)
  h2(ip) = subplot(3,nt,nt+ip);
end

hca = h1(1);
%irf_plot(hca,mvaPe1.xy,'color','k','linewidth',1)
irf_plot(hca,mvaVe1,'linewidth',1)
hca.YLabel.String = 'P_{eLM} (nPa)';
hca.YLabel.Interpreter = 'tex';
%irf_zoom(hca,'x',irf.tint('2017-07-11T22:33:58.30Z/2017-07-11T22:34:05.99Z'))
irf_zoom(hca,'x',times([1 times.length]) + [-3 3])
irf_zoom(hca,'y')
hmark = irf_pl_mark(hca,times.epochUnix,'k');
c_eval('hmark(?).LineWidth = 1;',1:numel(hmark))
xtickangle(h1,0)
h1.Position(4) = 0.16;

isub = 1;
for itime = 1:times.length
  %hca = h2(isub); isub = isub + 1;
  time = times(itime);
  % Reduce distributions
  c_eval('dist = ePDist?.elim(elim).tlim(time+0.015*[-1 1]*1); dist = dist(:);',ic)
  c_eval('scpot = scPot?.resample(dist);',ic)  
  vdf = dist.reduce('2D',L,M,'vint',vint,'scpot',scpot,'vg',vg);
    
  % Plot
  hca = h2(isub); isub = isub + 1;
  [ha_,hb_,hc_] = vdf.plot_plane(hca);
  hc_.Colorbar.YLabel.String = 'log_{10} f_e (s^2/m^5)';
  colormap(hca,pic_colors('candy4'))   
  hca.XLabel.String = 'v_L (10^3 km/s)';
  hca.YLabel.String = 'v_M (10^3 km/s)';
end
for itime = 1:times.length
  %hca = h2(isub); isub = isub + 1;
  time = times(itime);
  % Reduce distributions
  c_eval('dist = ePDist?.elim(elim).tlim(time+0.015*[-1 1]*1); dist = dist(:);',ic)
  c_eval('scpot = scPot?.resample(dist);',ic)  
  vdf = dist.reduce('2D',L,M,'vint',vint,'scpot',scpot,'vg',vg);
    
  % Plot
  hca = h2(isub); isub = isub + 1;
  [ha_,hb_,hc_] = vdf.plot_plane(hca,'off-diag-pres-cont',mvaVe1.x.resample(dist),mvaVe1.y.resample(dist));  
  hc_.Colorbar.YLabel.String = 'f_e(v_L,v_M)(v_L-v_L^{bulk})(v_M-v_M^{bulk}) (1/m^3)';
  colormap(hca,pic_colors('blue_red'))
  hca.CLim = max(abs(hca.CLim))*[-1 1];
  hca.XLabel.String = 'v_L (10^3 km/s)';
  hca.YLabel.String = 'v_M (10^3 km/s)';
end

%
hlinks_all = linkprop(h2,{'XLim','YLim'});
hlinks_f = linkprop(h2(1:nt),{'CLim'});
hlinks_p = linkprop(h2((nt+1):2*nt),{'CLim'});

h2(1).XLim = 0.99*vg([1 end])*1e-3;
h2(1).YLim = 0.99*vg([1 end])*1e-3;

c_eval('h2(?).XTick = -60:20:60; h2(?).YTick = -60:20:60;',1:numel(h2))

c_eval('h2(?).LineWidth = 1;',1:numel(h2))
c_eval('h2(?).FontSize = 14;',1:numel(h2))
c_eval('axis(h2(?),''square'');',1:numel(h2))

c_eval('h1(?).LineWidth = 1;',1:numel(h1))
c_eval('h1(?).FontSize = 14;',1:numel(h1))

%compact_panels(h2,0.0,00)
compact_panels(h2,0.005,00.005)
hb = findobj(gcf,'type','colorbar'); 
c_eval('hb(?).FontSize = 14;',1:numel(h2))
hb = hb(end:-1:1);
%
ihsub = [1:nt-1 nt+1:(2*nt-1)];
delete(hb(ihsub))
ih = nt;
hb(ih).Position(2) = hb(ih).Position(2)+hb(ih).Position(4)*0.05; 
hb(ih).Position(4) = hb(ih).Position(4)*0.9; 
ih = nt;
hb(ih).Position(2) = hb(ih).Position(2)+hb(ih).Position(4)*0.05; 
hb(ih).Position(4) = hb(ih).Position(4)*0.9; 
%hb(3).Position(4) = 0.22; hb(6).Position(4) = 0.22;
%ihsub = [2 3 5 6];
ihsub = [2:nt nt+2:(2*nt)];
c_eval('h2(?).YLabel.String = [];',ihsub)
c_eval('h2(?).YTickLabel = [];',ihsub)
c_eval('h2(?).XTickLabelRotation = 0;',(nt+1):2*nt)


%% Scatter plot of Pxy, Pyz
t_scatter = irf_time(['2017-07-11T22:34:01.300000000Z';'2017-07-11T22:34:03.800000000Z'],'utc>EpochTT');
t_scatter = t_scatter + [-1 1];
t_tseries = t_scatter + [-2 2];
tt = tt + [-3 3];
tt = t_tseries;
%tt = times([1 times.length]) + [-5 5];
tts = mvaPe1.xy.tlim(tt).time;


[h1,h2] = initialize_combined_plot(2,2,2,0.5,'vertical');

lim_p = 3*1e-3;
isub = 1;
if 1 % Pxy
  hca = h1(isub); isub = isub + 1;
  set(hca,'ColorOrder',mms_colors('1234'))  
  irf_plot(hca,{mvaPe1.xy.tlim(tt),mvaPe2.xy.tlim(tt),mvaPe3.xy.tlim(tt),mvaPe4.xy.tlim(tt)},'comp')
  hca.YLabel.String = 'P_{LM}^e';  
  set(hca,'ColorOrder',mms_colors('1234'))  
  irf_legend(hca,{'mms1','mms2','mms3','mms4'},[0.02 0.98])
end
if 1 % Pxy
  hca = h1(isub); isub = isub + 1;
  set(hca,'ColorOrder',mms_colors('1234'))  
  irf_plot(hca,{mvaPe1.yz.tlim(tt),mvaPe2.yz.tlim(tt),mvaPe3.yz.tlim(tt),mvaPe4.yz.tlim(tt)},'comp')
  hca.YLabel.String = 'P_{MN}^e';
  set(hca,'ColorOrder',mms_colors('1234'))  
  irf_legend(hca,{'mms1','mms2','mms3','mms4'},[0.02 0.98])
end
irf_zoom(h1,'x',t_tseries)
irf_zoom(h1,'y')
hmark = irf_pl_mark(h1,t_scatter);
c_eval('hmark(?).FaceAlpha = 0.1;',1:numel(hmark))



isub = 1;
if 0 % (Pxy,Pyx)
  hca = h2(isub); isub = isub + 1;
  plot(hca,mvaPe1.xy.tlim(t_scatter).data,mvaPe1.yz.tlim(t_scatter).data,'.','color',mms_colors('1'))
  hold(hca,'on')
  plot(hca,mvaPe2.xy.tlim(t_scatter).data,mvaPe2.yz.tlim(t_scatter).data,'.','color',mms_colors('2'))
  plot(hca,mvaPe3.xy.tlim(t_scatter).data,mvaPe3.yz.tlim(t_scatter).data,'.','color',mms_colors('3'))
  plot(hca,mvaPe4.xy.tlim(t_scatter).data,mvaPe4.yz.tlim(t_scatter).data,'.','color',mms_colors('4'))
  hold(hca,'off')
  %hcb = colorbar(hca);
  grid(hca,'on')
end
if 0 % (Pxy,Pyx)
  hca = h2(isub); isub = isub + 1;
  %plot(hca,mvaPe1.xy.tlim(tt).data,mvaPe1.yz.tlim(tt).data,'.','color',mms_colors('1'))
  %hold(hca,'on')
  %plot(hca,mvaPe2.xy.tlim(tt).data,mvaPe2.yz.tlim(tt).data,'.','color',mms_colors('2'))
  plot(hca,mvaPe3.xy.tlim(t_scatter).data,mvaPe3.yz.tlim(t_scatter).data,'.','color',mms_colors('3'))
  %plot(hca,mvaPe4.xy.tlim(tt).data,mvaPe4.yz.tlim(tt).data,'.','color',mms_colors('4'))
  %hold(hca,'off')
  %hcb = colorbar(hca);
  grid(hca,'on')
end
if 1 % (Pxy,Pyx)
  for ic = 1:4
    hca = h2(isub); isub = isub + 1;
    c_eval('pe = mvaPe?.tlim(t_scatter);',ic)
    %plot(hca,mvaPe1.xy.tlim(tt).data,mvaPe1.yz.tlim(tt).data,'.','color',mms_colors('1'))
    %hold(hca,'on')
    %plot(hca,mvaPe2.xy.tlim(tt).data,mvaPe2.yz.tlim(tt).data,'.','color',mms_colors('2'))
    scatter(hca,pe.xy.data,pe.yz.data,30,pe.xy.time-pe.xy.time(1),'filled')
    %plot(hca,mvaPe4.xy.tlim(tt).data,mvaPe4.yz.tlim(tt).data,'.','color',mms_colors('4'))
    %hold(hca,'off')
    hcb = colorbar(hca);
    hcb.YLabel.String = ['Seconds since ' irf_time(pe.xy.tlim(t_scatter).time(1),'EpochTT>utc_HH:MM:SS.mmm')];
    grid(hca,'on')
    cmap_time = irf_colormap('waterfall');
    colormap(hca,cmap_time);
    maxlim = max(abs([hca.XLim hca.YLim]));
    hca.XLim = lim_p*[-1 1];
    hca.YLim = lim_p*[-1 1];
    axis(hca,'square')
    hca.XTick = hca.YTick;
    hca.XLabel.String = 'P^e_{LM}';
    hca.YLabel.String = 'P^e_{MN}';
    hca.Color = [0.1 0.1 0.1];
    hca.GridColor = [0.7 0.7 0.7];
    hleg = irf_legend(hca,sprintf('MMS %g',ic),[0.02 0.98],'color',mms_colors(num2str(ic)),'BackgroundColor',[1 1 1]);
  
    if 1% Clone colorbar for time and place on top of panel 1.
      hca = h1(1);
      h_pos = hca.Position;
      hb = colorbar('peer',hca,'location','northoutside');
      hb.YTick = [];
      colormap(hca,cmap_time)
      
      
      xlim = hca.XLim;
      xmark = [min(hmark(1).XData) max(hmark(1).XData)];
      x1_rel = (xmark(1)-xlim(1))/diff(xlim);
      x2_rel = (xmark(2)-xlim(1))/diff(xlim);
      
      hb.Position(1) = hca.Position(1) + hca.Position(3)*x1_rel;
      hb.Position(3) = hca.Position(3)*(x2_rel-x1_rel);
      drawnow
      hb.Position(2) = hca.Position(2) + hca.Position(4);
    end
  end
end
if 0 % (Pxy,Pyx)
  hca = h1(isub); isub = isub + 1;
  scatter(hca,mvaPe1.xy.tlim(t_scatter).data,mvaPe1.yz.tlim(t_scatter).data,20,tts-tts(1),'filled')
  hcb = colorbar(hca);
  grid(hca,'on')
end

